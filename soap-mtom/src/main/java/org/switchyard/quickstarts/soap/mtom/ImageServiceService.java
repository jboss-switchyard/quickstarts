/*
 * JBoss, Home of Professional Open Source
 * Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
 * contributors by the @authors tag. See the copyright.txt in the
 * distribution for a full listing of individual contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.switchyard.quickstarts.soap.mtom;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ImageServiceService", targetNamespace = "urn:switchyard-quickstart:soap-mtom:1.0",
    wsdlLocation = "http://localhost:8080/soap-mtom/ImageServiceService?wsdl")
public class ImageServiceService
    extends Service
{

    private final static Logger logger = Logger.getLogger(org.switchyard.quickstarts.soap.mtom.ImageServiceService.class.getName());

    public ImageServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ImageServiceService(URL wsdlLocation) {
        super(wsdlLocation, new QName("urn:switchyard-quickstart:soap-mtom:1.0", "ImageServiceService"));
    }

    /**
     * 
     * @return
     *     returns ImageService
     */
    @WebEndpoint(name = "ImageServicePort")
    public ImageService getImageServicePort() {
        return super.getPort(new QName("urn:switchyard-quickstart:soap-mtom:1.0", "ImageServicePort"), ImageService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ImageService
     */
    @WebEndpoint(name = "ImageServicePort")
    public ImageService getImageServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:switchyard-quickstart:soap-mtom:1.0", "ImageServicePort"), ImageService.class, features);
    }

}
