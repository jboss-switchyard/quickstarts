#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

## bpel Configuration Properties

bpel.dao.factory=org.apache.ode.dao.jpa.hibernate.BpelDAOConnectionFactoryImpl
bpel.dao.factory.store=org.apache.ode.dao.jpa.hibernate.ConfStoreDAOConnectionFactoryImpl
bpel.dao.factory.scheduler=org.apache.ode.dao.jpa.hibernate.SchedulerDAOConnectionFactoryImpl
bpel.cache.provider=org.riftsaw.engine.internal.InfinispanCacheProvider

bpel.tx.factory.class = org.riftsaw.engine.jboss.JBossTransactionFactory

bpel.db.mode=EMBEDDED
db.emb.create=false
bpel.db.ext.dataSource=java:BPELDB

# all hibernate specific properties

hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.hbm2ddl.auto=none
hibernate.current_session_context_class=jta
hibernate.show_sql=false
hibernate.connection.isolation=2
hibernate.jdbc.batch_size=20

jta.UserTransaction=UserTransaction

ode.persistence=hibernate

#
# Comma separated list of BPEL event listeners.
# BPAFLogAdapter is used to store BPEL events for historic analysis.
#
bpel.event.listeners=org.jboss.soa.bpel.console.bpaf.BPAFLogAdapter
#bpel.event.listeners=

# Property used to configure whether ODE should store the BPEL events in its default location
# (Set to false, as RiftSaw uses the BPEL events stored by the BPAFLogAdapter)
persist.bpel.events = false

# Determines if even top level transaction based ODE invokes should bypass the scheduler
# If false, then top level invokes will be scheduled, but subsequent nested invokes (to
# external services in same thread) will be directly invoked instead of via the scheduler.
# NOTE: Currently disabled, as the mechanism bypasses the mex.timeout guard and also has
# issues when dealing with correlation, where messages are received out of order.
#bpel.invoke.immediate=false

#Configure the scheduler node name
bpel.riftsaw.node.name=riftsaw-scheduler-node

#Configure the cache name from the infinispan module for the ProcessConf cache 
bpel.cache-name=cluster
