<?xml version="1.0" encoding="UTF-8"?>
<!--
 - Copyright 2013 Red Hat Inc. and/or its affiliates and other contributors.
 - 
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 - http://www.apache.org/licenses/LICENSE-2.0
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
 -->
<switchyard xmlns="urn:switchyard-config:switchyard:1.1">
    <composite xmlns="http://docs.oasis-open.org/ns/opencsa/sca/200912" name="RulesModelTests" targetNamespace="urn:rules:test:1.1">
        <component name="DoStuffRules">
            <implementation.rules xmlns="urn:switchyard-component-rules:config:1.1">
                <channels>
                    <channel class="org.switchyard.component.rules.config.model.RulesModelTests$TestChannel" name="theName" operation="theOperation" reference="theReference"/>
                </channels>
                <listeners>
                    <listener class="org.kie.api.event.rule.DebugRuleRuntimeEventListener"/>
                </listeners>
                <loggers>
                    <logger interval="2000" log="theLog" type="CONSOLE"/>
                </loggers>
                <manifest>
                    <container baseName="theBase" releaseId="theGroupId:theArtifactId:theVersion" scan="true" scanInterval="1000" sessionName="theSession"/>
                </manifest>
                <operations>
                    <operation eventId="theEventId" name="process" type="FIRE_UNTIL_HALT">
                        <globals>
                            <global from="context['foobar']" to="globalVar"/>
                        </globals>
                        <inputs>
                            <input from="message.content.nested" to="inputVar"/>
                        </inputs>
                        <outputs>
                            <output from="outputVar" to="message.content"/>
                        </outputs>
                        <faults>
                            <fault from="faultVar" to="message.content"/>
                        </faults>
                    </operation>
                </operations>
                <properties>
                    <property name="foo" value="bar"/>
                </properties>
            </implementation.rules>
            <service name="DoStuffRules">
                <interface.java interface="org.switchyard.component.rules.config.model.DoStuffRules"/>
            </service>
        </component>
    </composite>
</switchyard>
