#
# JBoss, Home of Professional Open Source
# Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
# contributors by the @authors tag. See the copyright.txt in the
# distribution for a full listing of individual contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

## bpel Configuration Properties

## Database Mode ("INTERNAL", "EXTERNAL", "EMBEDDED")
## What kind of database should ODE use?
##   * "EMBEDDED" - ODE will create its own embbeded database (Derby)
##	           and connection pool (Minerva).
##   * "EXTERNAL" - ODE will use an app-server provided database and pool.
##                  The "ode-jbi.db.ext.dataSource" property will need to
##                  be set.
##   * "INTERNAL" - ODE will create its own connection pool for a user-
##                  specified JDBC URL and driver.
#bpel.db.mode=EMBEDDED

## External Database [JNDI Name]
## JNDI Name of the DataSource for the ODE database. This is only
## used if the "ode-jbi.db.mode" property is set to "EXTERNAL"
#bpel.db.ext.dataSource=java:comp/env/jdbc/ode

## Embedded Database Name [String]
## Name of the embedded Derby database. This is only used if the
## "ode-jbi.db.mode" property is set to "EMBEDDED".
#ode-jbi.db.emb.name=hibdb
#ode-jbi.db.emb.name=jpadb

## Internal Database Configuration
#ode-jbi.db.int.jdbcurl=jdbc:mysql://localhost/ode?user=sa
#ode-jbi.db.int.driver=com.mysql.jdbc.Driver
#bpel.db.int.password = 
#bpel.db.int.username = 

## DB Pool Configuration for internal DB
#bpel.db.pool.max = 10
#bpel.db.pool.min = 1

## DAO Connection Factory class.
## uncomment the following for hibernate.

bpel.dao.factory=org.apache.ode.dao.jpa.hibernate.BpelDAOConnectionFactoryImpl
bpel.dao.factory.store=org.apache.ode.dao.jpa.hibernate.ConfStoreDAOConnectionFactoryImpl
bpel.dao.factory.scheduler=org.apache.ode.dao.jpa.hibernate.SchedulerDAOConnectionFactoryImpl
bpel.cache.provider=org.apache.ode.il.cache.DefaultCacheProvider

## Transaction Factory
## default is org.apache.ode.il.EmbeddedGeronimoFactory
## available alternatives are:
##   org.apache.ode.axis2.util.GeronimoFactory
##   org.apache.ode.axis2.util.JBossFactory
##   org.apache.ode.axis2.util.TomcatFactory

##   org.apache.ode.axis2.util.WLSFactory
#bpel.tx.factory.class = org.riftsaw.engine.jboss.JBossTransactionFactory
bpel.tx.factory.class = org.apache.ode.il.EmbeddedGeronimoFactory

## JCA connector port (default 2099), set to 0 to disable JCA connector
#bpel.jca.port = 

## JCA conncetor name (default 'ode')
#bpel.jca.name = 

## Working dir
#bpel.working.dir = 

## MEX Interceptors
#bpel.mex.interceptors = 

## Process dehydration
#bpel.process.dehydration = 

## Extension Bundles
## FQCNs, comma separated.
#bpel.extension.bundles.runtime = 
#bpel.extension.bundles.validation = 

bpel.db.mode=EMBEDDED
db.emb.create=false
bpel.db.ext.dataSource=java:BPELDB

# if set to true will self-register BPEL endpoints upon deployment to a UDDI.
# this uses the juddi-client-3.0.x and the uddi client config can be set in the uddi.xml
# file
bpel.uddi.registration=true
# if set to true will lookup BPEL endpoints in a UDDI Registry.
# this uses the juddi-client-3.0.x and the uddi client config can be set in the uddi.xml
# file
bpel.uddi.lookup=true
# implementation of the client integration class
bpel.uddi.client.impl=org.jboss.soa.bpel.uddi.UDDIRegistrationImpl
# the uddi client config riftsaw.sar/META-INF/riftsaw.uddi.xml 
bpel.uddi.config=META-INF/riftsaw.uddi.xml
# name of the clerk
bpel.uddi.clerk=BPELClerk

bpel.jaxws.client.initializer.impl=

#
# Properties used to configure the Dynamic Service Provider deployer and service config factory
#
bpel.dsp.service.deployer=org.jboss.soa.dsp.deployer.jbossas5.JBossServiceDeployer
bpel.dsp.server.config.factory=org.jboss.soa.dsp.server.jbossas5.JBossServerConfigFactory

# This property defines whether the Web Service interface should be updated when a new version
# of the BPEL process is deployed. If the property is false, then the web service interface
# will be updated when a new version is deployed, however this means that the service will
# briefly be unavailable during the transition. If the property is true, then the web service
# interface associated with the first deployed version will be maintained during the deployment
# of subsequent versions.
bpel.ws.stableInterface = false

# all hibernate specific properties

hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.hbm2ddl.auto=none
hibernate.current_session_context_class=jta
#hibernate.transaction.manager_lookup_class=org.hibernate.transaction.JBossTransactionManagerLookup
hibernate.show_sql=false
hibernate.connection.isolation=2
hibernate.jdbc.batch_size=20


jta.UserTransaction=UserTransaction

ode.persistence=hibernate

#
# Comma separated list of BPEL event listeners.
# BPAFLogAdapter is used to store BPEL events for historic analysis.
#
#bpel.event.listeners=org.jboss.soa.bpel.console.bpaf.BPAFLogAdapter
#bpel.event.listeners=

# Property used to configure whether ODE should store the BPEL events in its default location
# (Set to false, as RiftSaw uses the BPEL events stored by the BPAFLogAdapter)
persist.bpel.events = false

# Determines if even top level transaction based ODE invokes should bypass the scheduler
# If false, then top level invokes will be scheduled, but subsequent nested invokes (to
# external services in same thread) will be directly invoked instead of via the scheduler.
bpel.invoke.immediate=true
